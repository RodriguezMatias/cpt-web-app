{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"src/app/services/glider/glider.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/router\";\nfunction GliderSidenavComponent_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const glider_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/aeronaves/\", glider_r1.designator, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", glider_r1.model, \" - \", glider_r1.designator, \"\");\n  }\n}\nexport let GliderSidenavComponent = /*#__PURE__*/(() => {\n  class GliderSidenavComponent {\n    constructor(changeDetectorRef, media, gliderService) {\n      this.gliderService = gliderService;\n      this.gliderArray = [];\n      this.mobileQuery = media.matchMedia('(max-width: 600px)');\n      this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n      this.mobileQuery.addListener(this._mobileQueryListener);\n      this.getGliders();\n    }\n    ngOnDestroy() {\n      this.mobileQuery.removeListener(this._mobileQueryListener);\n    }\n    getGliders() {\n      this.gliderService.getGliders().subscribe(gliders => this.gliderArray = gliders);\n    }\n    static {\n      this.ɵfac = function GliderSidenavComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GliderSidenavComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.MediaMatcher), i0.ɵɵdirectiveInject(i2.GliderService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: GliderSidenavComponent,\n        selectors: [[\"app-glider-sidenav\"]],\n        decls: 5,\n        vars: 4,\n        consts: [[\"snav\", \"\"], [\"fixedTopGap\", \"56\", 3, \"mode\", \"fixedInViewport\", \"opened\"], [\"mat-list-item\", \"\", 3, \"routerLink\", 4, \"ngFor\", \"ngForOf\"], [\"mat-list-item\", \"\", 3, \"routerLink\"]],\n        template: function GliderSidenavComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-sidenav-container\")(1, \"mat-sidenav\", 1, 0)(3, \"mat-nav-list\");\n            i0.ɵɵtemplate(4, GliderSidenavComponent_a_4_Template, 2, 4, \"a\", 2);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"mode\", ctx.mobileQuery.matches ? \"over\" : \"side\")(\"fixedInViewport\", ctx.mobileQuery.matches)(\"opened\", !ctx.mobileQuery.matches);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.gliderArray);\n          }\n        },\n        dependencies: [i3.NgForOf, i4.MatSidenav, i4.MatSidenavContainer, i5.MatNavList, i5.MatListItem, i6.RouterLink],\n        styles: [\"mat-sidenav-container[_ngcontent-%COMP%]{height:100vh;background-color:#878e912c}\"]\n      });\n    }\n  }\n  return GliderSidenavComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}